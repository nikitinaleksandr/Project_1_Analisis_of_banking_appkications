import pytest
from src.reports import spending_by_category, save_report
import json

# @pytest.fixture
# def coll_1():
#     return [
#     {
#         "Дата операции": "10.11.2020 10:23:23",
#         "Дата платежа": "11.11.2020",
#         "Номер карты": "*7197",
#         "Статус": "OK",
#         "Сумма операции": -56.0,
#         "Валюта операции": "RUB",
#         "Сумма платежа": -56.0,
#         "Валюта платежа": "RUB",
#         "Кэшбэк": float('nan'),
#         "Категория": "Фастфуд",
#         "MCC": 5814.0,
#         "Описание": "Rumyanyj Khleb",
#         "Бонусы (включая кэшбэк)": 1,
#         "Округление на инвесткопилку": 0,
#         "Сумма операции с округлением": 56.0
#     }]


def test_spending_by_category(coll_1=[
    {
        "Дата операции": "10.11.2020 10:23:23",
        "Дата платежа": "11.11.2020",
        "Номер карты": "*7197",
        "Статус": "OK",
        "Сумма операции": -56.0,
        "Валюта операции": "RUB",
        "Сумма платежа": -56.0,
        "Валюта платежа": "RUB",
        "Кэшбэк": float('nan'),
        "Категория": "Фастфуд",
        "MCC": 5814.0,
        "Описание": "Rumyanyj Khleb",
        "Бонусы (включая кэшбэк)": 1,
        "Округление на инвесткопилку": 0,
        "Сумма операции с округлением": 56.0
    }]):
    '''Тестирование правильности работы функции'''

    assert spending_by_category(coll_1, category="Фастфуд", date = '11.11.2020') == [
    {
        "Дата операции": "10.11.2020 10:23:23",
        "Дата платежа": "11.11.2020",
        "Номер карты": "*7197",
        "Статус": "OK",
        "Сумма операции": -56.0,
        "Валюта операции": "RUB",
        "Сумма платежа": -56.0,
        "Валюта платежа": "RUB",
        "Кэшбэк": float('nan'),
        "Категория": "Фастфуд",
        "MCC": 5814.0,
        "Описание": "Rumyanyj Khleb",
        "Бонусы (включая кэшбэк)": 1,
        "Округление на инвесткопилку": 0,
        "Сумма операции с округлением": 56.0
    }]